{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/details/details.component.ts","./src/app/details/details.component.html","./src/app/details/personalpro/personalpro.component.ts","./src/app/details/personalpro/personalpro.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth-resolver.service.ts","./src/app/services/authentication.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { PersonalproComponent } from './details/personalpro/personalpro.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthResolverService } from './services/auth-resolver.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'details/personal', pathMatch: 'full'},\r\n  {\r\n    path:'details', \r\n    component: DetailsComponent, \r\n    resolve: { authResolver : AuthResolverService},\r\n    children: [\r\n      {path:'personal', component: PersonalproComponent},\r\n      {path:'professional', component: PersonalproComponent}\r\n    ]\r\n  },\r\n  {path:'login', component: LoginComponent},\r\n  {path:'register', component: RegisterComponent},\r\n  { path: '**', redirectTo: 'details' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthResolverService]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'DashboardApp';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { PersonalproComponent } from './details/personalpro/personalpro.component';\r\nimport {CardModule} from 'primeng/card';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {MessageService} from 'primeng/api';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DetailsComponent,\r\n    PersonalproComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    CardModule,\r\n    ToastModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [MessageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  currentUser: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  selectedInfo: string;\r\n  subscription: Subscription;\r\n\r\n  constructor(private router: Router,\r\n    private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n    this.selectedInfo = 'personal';\r\n  }\r\n\r\n  getDetails(detail) {\r\n    switch (detail) {\r\n      case 'personal':\r\n        this.selectedInfo = 'personal';\r\n        this.router.navigateByUrl('/details/personal');\r\n        break;\r\n      case 'pro':\r\n        this.selectedInfo = 'pro';\r\n        this.router.navigateByUrl('/details/professional');\r\n        break\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe()\r\n}\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\r\n    <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\"  style=\"cursor: pointer;\" (click)=\"logout()\">Logout</a>\r\n    </div>\r\n</nav>\r\n<div class=\"p-grid\" style=\"height: 100%;\">\r\n    <div class=\"p-col-fixed\" style=\"width:20%\">\r\n        <p-card>\r\n            <div class='nameClass'>Hello, {{currentUser.firstName}} {{currentUser.lastName}}</div>\r\n            <hr>\r\n            <div style=\"height: 40px;\"></div>\r\n            <hr>\r\n            <div class='infoClass' (click)=\"getDetails('personal')\"\r\n                [style.background-color]=\"selectedInfo==='personal' ? 'gainsboro' : null\">Personal Info</div>\r\n            <hr>\r\n            <div class='infoClass' (click)=\"getDetails('pro')\" [style.background-color]=\"selectedInfo==='pro' ? 'gainsboro' : null\">Professional Info</div>\r\n            <hr>\r\n        </p-card>\r\n    </div>\r\n    <div class=\"p-col\">\r\n        <p-card>\r\n            <div>\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </p-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-personalpro',\r\n  templateUrl: './personalpro.component.html',\r\n  styleUrls: ['./personalpro.component.css']\r\n})\r\nexport class PersonalproComponent implements OnInit {\r\n\r\n  infoForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  detailPageName: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private userService: UserService,\r\n    private messageService: MessageService,\r\n    private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.detailPageName = this.route.snapshot.routeConfig.path;\r\n    if (this.detailPageName === 'personal') {\r\n      this.infoForm = this.formBuilder.group({\r\n        firstName: [this.authenticationService.currentUserValue.firstName, Validators.required],\r\n        lastName: [this.authenticationService.currentUserValue.lastName, Validators.required]\r\n      });\r\n    } else if(this.detailPageName === 'professional') {\r\n      this.infoForm = this.formBuilder.group({\r\n        experience: [this.authenticationService.currentUserValue.experience, Validators.required]\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  get form() { return this.infoForm.controls; }\r\n\r\n  onUpdate() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.infoForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.userService.updateDetails(this.infoForm.value).subscribe(\r\n      data => {\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Data updated successfully' });\r\n        this.loading = false;\r\n        this.onCancel();\r\n      },\r\n      error => {\r\n        this.messageService.add({ severity: 'info', detail: error.error.message });\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onCancel() {\r\n    this.submitted = false;\r\n    this.infoForm.reset()\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 offset-sm-3\">\r\n                <form  [formGroup]=\"infoForm\" (ngSubmit)=\"onUpdate()\">\r\n                    <div class=\"form-group\" *ngIf=\"detailPageName==='professional'\">\r\n                        <label for=\"experience\">Experience</label>\r\n                        <input type=\"text\" formControlName=\"experience\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.experience.errors }\" />\r\n                        <div *ngIf=\"submitted && form.experience.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.experience.errors.required\">Experience is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngIf=\"detailPageName==='personal'\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"firstName\">First Name</label>\r\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                                [ngClass]=\"{ 'is-invalid': submitted && form.firstName.errors }\" />\r\n                            <div *ngIf=\"submitted && form.firstName.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"form.firstName.errors.required\">First Name is required</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"lastName\">Last Name</label>\r\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                                [ngClass]=\"{ 'is-invalid': submitted && form.lastName.errors }\" />\r\n                            <div *ngIf=\"submitted && form.lastName.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"form.lastName.errors.required\">Last Name is required</div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <div class=\"form-group\">\r\n                        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                            Save\r\n                        </button>\r\n                        <span style=\"cursor: pointer;\" (click)=\"onCancel()\" class=\"btn btn-link\">Cancel</span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-toast position=\"top-center\"></p-toast>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  // returnUrl: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService) {\r\n    // redirect to home if already logged in\r\n    if (this.authenticationService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    // this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  get form() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authenticationService.login(this.form.username.value, this.form.password.value).subscribe(\r\n      data => {\r\n        console.log(\"login data\", data);\r\n        if (data['error']) {\r\n          this.messageService.add({ severity: 'error', detail: 'Username or password is incorrect' });\r\n          this.loading = false;\r\n        } else {\r\n          let users = JSON.parse(localStorage.getItem('users')) || [];\r\n          const user = users.find(x => x.username === this.form.username.value && x.password === this.form.password.value);\r\n\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n          this.authenticationService.setUserSubject(user);\r\n          this.router.navigateByUrl('/details/personal');\r\n        }\r\n      },\r\n      error => {\r\n        this.messageService.add({ severity: 'error', detail: error.error.message });\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 offset-sm-3\">\r\n                <h2>Login</h2>\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"username\">Username</label>\r\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.username.errors }\" />\r\n                        <div *ngIf=\"submitted && form.username.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.username.errors.required\">Username is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.password.errors }\" />\r\n                        <div *ngIf=\"submitted && form.password.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.password.errors.required\">Password is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                            Login\r\n                        </button>\r\n                        <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-toast ></p-toast>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private messageService: MessageService) {\r\n    // redirect to home if already logged in\r\n    if (this.authenticationService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get form() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onRegister() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n\r\n    this.userService.register(this.registerForm.value).subscribe(\r\n      data => {\r\n        console.log(\"dataa\", data);\r\n        if (data['error']) {\r\n          this.messageService.add({ severity: 'error', detail: data['error'] });\r\n          this.loading = false;\r\n        } else {\r\n          let user = this.registerForm.value;\r\n          user[\"experience\"] = 0;\r\n          let users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n          users.push(user);\r\n          localStorage.setItem(\"users\", JSON.stringify(users));\r\n          this.messageService.add({ severity: 'success', detail: \"Registration successful\" });\r\n          setTimeout(() => { this.router.navigateByUrl('/login'); }, 3000)\r\n        }\r\n      },\r\n      error => {\r\n        this.messageService.add({ severity: 'error', detail: error.error.message });\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 offset-sm-3\">\r\n                <h2>Register</h2>\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"firstName\">First Name</label>\r\n                        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.firstName.errors }\" />\r\n                        <div *ngIf=\"submitted && form.firstName.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.firstName.errors.required\">First Name is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.lastName.errors }\" />\r\n                        <div *ngIf=\"submitted && form.lastName.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.lastName.errors.required\">Last Name is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"username\">Username</label>\r\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.username.errors }\" />\r\n                        <div *ngIf=\"submitted && form.username.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.username.errors.required\">Username is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && form.password.errors }\" />\r\n                        <div *ngIf=\"submitted && form.password.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.password.errors.required\">Password is required</div>\r\n                            <div *ngIf=\"form.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                            Register\r\n                        </button>\r\n                        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p-toast></p-toast>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthResolverService implements Resolve<any> {\r\n\r\n  constructor(        \r\n    private router: Router,\r\n    private authenticationService: AuthenticationService) { }\r\n    \r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    if (currentUser) {\r\n        // authorised so return true\r\n        return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, of, throwError } from \"rxjs\";\r\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<any>;\r\n  public currentUser: Observable<any>;\r\n  users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\n  constructor(private http: HttpClient) {\r\n    // let currentUserObj = localStorage.getItem(\"currentUser\");\r\n    // console.log(\"currnetUser\", currentUserObj);\r\n    // if(currentUserObj===)\r\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue() {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  setUserSubject(user) {\r\n    this.currentUserSubject.next(user);\r\n  }\r\n\r\n  login(username, password) {\r\n    const authData = { username: username, password: password };\r\n    return this.http.post(\r\n      \"http://dashboardnodebackend-env.eba-wsndghtk.ap-south-1.elasticbeanstalk.com/api/user/login\",\r\n      authData\r\n    );\r\n\r\n    // this.users = JSON.parse(localStorage.getItem('users')) || [];\r\n    // const user = this.users.find(x => x.username === username && x.password === password);\r\n    // if (!user) return this.error('Username or password is incorrect');\r\n\r\n    // localStorage.setItem('currentUser', JSON.stringify(user));\r\n    // this.currentUserSubject.next(user);\r\n    // var body = {\r\n    //   username: user.username,\r\n    //   firstName: user.firstName,\r\n    //   lastName: user.lastName\r\n    // }\r\n    // return of(new HttpResponse({ status: 200, body }))\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage and set current user to null\r\n    localStorage.removeItem(\"currentUser\");\r\n    this.currentUserSubject.next(null);\r\n  }\r\n\r\n  error(message) {\r\n    return throwError({ error: { message } });\r\n  }\r\n}\r\n","import { HttpClient, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { of, throwError } from \"rxjs\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  // array in local storage for registered users\r\n  users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  register(user) {\r\n    console.log(\"user\", user);\r\n    const authData = { username: user.username, password: user.password };\r\n    return this.http.post(\"http://dashboardnodebackend-env.eba-wsndghtk.ap-south-1.elasticbeanstalk.com/api/user/signup\", authData);\r\n  }\r\n\r\n  updateDetails(user) {\r\n    if (user.hasOwnProperty(\"experience\")) {\r\n      for (var val of this.users) {\r\n        if (\r\n          val.username === this.authenticationService.currentUserValue.username\r\n        ) {\r\n          if (user.experience === val.experience)\r\n            return this.error(\"No change in data\");\r\n          val.experience = user.experience;\r\n          break;\r\n        }\r\n      }\r\n      var body = {\r\n        firstName: this.authenticationService.currentUserValue.firstName,\r\n        lastName: this.authenticationService.currentUserValue.lastName,\r\n        username: this.authenticationService.currentUserValue.username,\r\n        password: this.authenticationService.currentUserValue.password,\r\n        experience: user.experience,\r\n      };\r\n    } else {\r\n      for (var val of this.users) {\r\n        if (\r\n          val.username === this.authenticationService.currentUserValue.username\r\n        ) {\r\n          if (user.firstName === val.firstName && user.lastName == val.lastName)\r\n            return this.error(\"No change in data\");\r\n          val.firstName = user.firstName;\r\n          val.lastName = user.lastName;\r\n          break;\r\n        }\r\n      }\r\n      var body = {\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        username: this.authenticationService.currentUserValue.username,\r\n        password: this.authenticationService.currentUserValue.password,\r\n        experience: this.authenticationService.currentUserValue.experience,\r\n      };\r\n    }\r\n\r\n    localStorage.setItem(\"users\", JSON.stringify(this.users));\r\n\r\n    localStorage.setItem(\"currentUser\", JSON.stringify(body));\r\n    this.authenticationService.setUserSubject(body);\r\n    return of(new HttpResponse({ status: 200, body }));\r\n  }\r\n\r\n  error(message) {\r\n    return throwError({ error: { message } });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}